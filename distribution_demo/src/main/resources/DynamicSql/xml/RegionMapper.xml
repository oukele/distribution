<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oukele.dao.RegionMapper">
  <resultMap id="BaseResultMap" type="com.oukele.model.Region">
    <id column="region_id" jdbcType="VARCHAR" property="regionId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.oukele.model.Region">
    insert into region (region_id, region_name, city_id
      )
    values (#{regionId,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.oukele.model.Region">
    update region
    set region_name = #{regionName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR}
    where region_id = #{regionId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
  </select>
  <resultMap id="BaseResultMap" type="com.oukele.model.Region">
    <id column="region_id" jdbcType="VARCHAR" property="regionId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.oukele.model.Region">
    insert into region (region_id, region_name, city_id
      )
    values (#{regionId,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.oukele.model.Region">
    update region
    set region_name = #{regionName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR}
    where region_id = #{regionId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
  </select>
  <resultMap id="BaseResultMap" type="com.oukele.model.Region">
    <id column="region_id" jdbcType="VARCHAR" property="regionId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.oukele.model.Region">
    insert into region (region_id, region_name, city_id
      )
    values (#{regionId,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.oukele.model.Region">
    update region
    set region_name = #{regionName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR}
    where region_id = #{regionId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
  </select>
  <resultMap id="BaseResultMap" type="com.oukele.model.Region">
    <id column="region_id" jdbcType="VARCHAR" property="regionId" />
    <result column="region_name" jdbcType="VARCHAR" property="regionName" />
    <result column="city_id" jdbcType="VARCHAR" property="cityId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.oukele.model.Region">
    insert into region (region_id, region_name, city_id
      )
    values (#{regionId,jdbcType=VARCHAR}, #{regionName,jdbcType=VARCHAR}, #{cityId,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.oukele.model.Region">
    update region
    set region_name = #{regionName,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=VARCHAR}
    where region_id = #{regionId,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
    where region_id = #{regionId,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select region_id, region_name, city_id
    from region
  </select>
</mapper>